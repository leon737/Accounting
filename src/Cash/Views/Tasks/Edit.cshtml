@model Cash.Web.Models.EditTaskViewModel

@{
    ViewBag.Title = $"Редактирование задачи #{Model.Id}";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.ParentId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Workload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Workload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Workload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Importance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Importance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Importance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="parent_task_title" class="ui-autocomplete-input form-control" value="@Model.ParentTitle" />
                @if (Model.ParentId != null)
                {
                    <span id="move_to_root" class="btn-link">Вынести на верхний уровень</span>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TaskTypeId, Model.TaskTypes)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AdditionalInfo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.WorkloadAutoCalc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkloadAutoCalc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkloadAutoCalc, "", new { @class = "text-danger" })
            </div>
        </div>



        <h3>Материалы / ресурсы для задачи</h3>

        <div class="form-group">
            <label class="control-label col-md-2">Добавить</label>
            <div class="col-md-8">
                <input type="text" id="new_resource" class="ui-autocomplete-input form-control" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Количество</label>
            <div class="col-md-10">
                <input type="text" data-bind="value:add_quantity" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 col-md-offset-2">
                <input type="button" value="Добавить" class="btn" data-bind="enable: resource_to_add() != undefined && add_quantity() != undefined, click: add_resource" />
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <table class="table" data-bind="foreach: resources">
                    <tr>
                        <td data-bind="text:name"></td>
                        <td data-bind="text:quantity"></td>
                        <td data-bind="text:unit_name"></td>
                        <td>
                            <input type="button" value="Удалить" class="btn" data-bind="click: $root.remove_resource" />
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить изменения" class="btn btn-default" />
            </div>
        </div>
    </div>

    @*<textarea data-bind="value: ko.toJSON(resources)"></textarea>*@
    <input type="hidden" id="ResourcesJson" name="ResourcesJson" data-bind="value: ko.toJSON(resources)" />

}

<div>
    @Html.ActionLink("Назад к списку задач", "Index", new { id = Model.ParentId })
</div>

<input type="hidden" id="project" value="@ViewBag.Project.Code"/>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript">
        var data = @Html.Raw(Model.ResourcesJson);
        var model = new task_resources_model(data);
        ko.applyBindings(model);
    </script>
    
@Html.Partial("_TinyMcePartial")

@Html.Partial("_DatePickerPartial")

}
